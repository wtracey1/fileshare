#include "projectile.h"

void Weapon::aim(const cocos2d::Vec2& direction){
  
  int angle = static_cast<int>(CC_RADIANS_TO_DEGREES(direction.getAngle()));
  if(angle == 90 || angle == -90){ //moving vertical
  
  }else if(angle > 0 && angle < 90){ //moving up and right
    sprite->setFlippedX(invert);
    sprite->setRotation(-angle);
  }else if(angle > 90 && angle < 180){ //moving up and left
    sprite->setFlippedX(!invert);
    sprite->setRotation(180-angle);
  }else if(angle < 0 && angle > -90){ //moving down and right
    sprite->setFlippedX(invert);
    sprite->setRotation(-angle);
  }else if(angle < -90 && angle > -180){  //moving down and left
    sprite->setFlippedX(!invert);
    sprite->setRotation(-(180+angle));
  }else if(angle == -180 || angle == 180){
    sprite->setFlippedX(!invert);
    sprite->setRotation(0);
  }else if(angle == 0){
    sprite->setFlippedX(invert);
    sprite->setRotation(0);
  }
  
  if(!useRotate){
    sprite->setRotation(0);
  }
  if(sprite->isFlippedX()){
    setAnchorPoint(cocos2d::Vec2(.75, .5));
  }else{
    setAnchorPoint(cocos2d::Vec2(.25, .5));
  }
}

void Weapon::fire(const cocos2d::Vec2& direction){
  aim(direction);
  
  
  int frameCount = Gamedata::getInstance().getXmlInt(getName()+"/animFrameCount");
  float frameSpeed = Gamedata::getInstance().getXmlFloat(getName()+"/frameInterval");
  cocos2d::Vector<cocos2d::SpriteFrame*> frames;
  frames.reserve(frameCount);
  std::stringstream strm;

  for(int i = 0; i < frameCount; ++i){
    strm.str("");
    strm << "frame" << i; //gets frame0...frameCount-1 in a "circular sequence"
    frames.pushBack(cocos2d::SpriteFrameCache::getInstance()->getSpriteFrameByName(
                                    Gamedata::getInstance().getXmlStr(getName()+"/"+strm.str())));
  }

  cocos2d::Animation* animation = cocos2d::Animation::createWithSpriteFrames(frames, frameSpeed);
  sprite->runAction(cocos2d::Animate::create(animation));
  
  
  
  
  
  
  
  
  
  
  
  
  
  

}
