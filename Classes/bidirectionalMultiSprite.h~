#ifndef __BIDIRECTIONAL__
#define __BIDIRECTIONAL__

#include "cocos2d.h"
#include "vector"
#include "gamedata.h"
#include "multiSprite.h"

class BidirectionalMultiSprite : public MultiSprite{
public:
  virtual BidirectionalMultiSprite* clone() const {
    BidirectionalMultiSprite* copy = new BidirectionalMultiSprite(getName());
    copy->setPosition(getPosition());
    copy->useRotate = useRotate;
    copy->invert = invert;
    return copy;
  }
  BidirectionalMultiSprite(const std::string& name) : 
    MultiSprite(name), 
    useRotate(Gamedata::getInstance().getXmlBool(name+"/rotate")),
    invert(Gamedata::getInstance().getXmlBool(name+"/invert")){}
  BidirectionalMultiSprite(const BidirectionalMultiSprite& s) : 
    MultiSprite(s), 
    useRotate(s.useRotate), 
    invert(s.invert){}
  virtual void update(float);
  virtual ~BidirectionalMultiSprite(){}//EDIT
private:
  bool useRotate;
  bool invert; //invert = true means left is default image and right is flipped
};
#endif
